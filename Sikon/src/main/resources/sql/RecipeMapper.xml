<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="RecipeMapper">
 	
 	<resultMap   id="recipeSelectMap"  type="recipe">
		<result property="recipeNo" 			column="recipe_no" 			jdbcType="NUMERIC"/>
		<result property="recipeName"			column="recipe_name" 		jdbcType="VARCHAR" />
		<result property="recipeDetail" 	column="recipe_detail" 		jdbcType="VARCHAR" />
		<result property="detail" 	column="detail" 		jdbcType="VARCHAR" />
		<result property="recipeImg" 			column="recipe_img" 		jdbcType="VARCHAR" />
		<result property="recipeVideo" 			column="recipe_video" 		jdbcType="VARCHAR" />
		<result property="recipeDifficulty" 				column="recipe_difficulty" 					jdbcType="VARCHAR" />
		<result property="recipeTheme"      column="recipe_theme"           jdbcType="VARCHAR"/>
		<result property="cookingTime"      column="cooking_time"           jdbcType="NUMERIC"/>
		<result property="recipeOrder"      column="recipe_order"            jdbcType="CLOB" javaType="java.lang.String" />
		<result property="recipeRegDate" 				column="recipe_regdate" 					jdbcType="DATE" />
		<result property="reviewNum"      column="review_num"           jdbcType="NUMERIC"/>
		<result property="ingredientNo"      column="ingredient_no"           jdbcType="NUMERIC"/>
		<result property="ingredientName"      column="ingredient_name"           jdbcType="VARCHAR"/>
		<result property="ingredientAmount"      column="ingredient_amount"           jdbcType="VARCHAR"/>
		<result property="recipeViews"      column="recipe_views"           jdbcType="NUMERIC"/>
		<collection property="writer" resultMap="userSelectMap"/>
	</resultMap>
	
	<resultMap id="userSelectMap" type="user">
		<result property="userId" 	column="user_id" 		jdbcType="VARCHAR"/>
		<result property="userName"	column="user_name" 		jdbcType="VARCHAR" />
		<result property="password" 	column="password" 		jdbcType="VARCHAR" />
		<result property="userBirth" 	column="user_birth" 		jdbcType="VARCHAR" />
		<result property="userNickname" 	column="user_nickname" 		jdbcType="VARCHAR" />
		<result property="userImage" 	column="user_image" 		jdbcType="VARCHAR" />
		<result property="addr" 	column="user_addr" 		jdbcType="VARCHAR" />
		<result property="role" 	column="role" 			jdbcType="VARCHAR" />
		<result property="phone" 	column="user_phone" 		jdbcType="VARCHAR" />
		<result property="holdpoint" 	column="holdpoint" 		jdbcType="NUMERIC" />
		<result property="mentorApply" 	column="mentor_apply" 		jdbcType="VARCHAR"  />
		<result property="loginPath" 	column="login_path" 		jdbcType="VARCHAR"  />
		<result property="regDate" 	column="user_regdate" 		jdbcType="DATE" />
		<result property="quitDate" 	column="quit_date" 		jdbcType="DATE" />
		<result property="quitStatus" 	column="quit_status" 		jdbcType="VARCHAR"  />
</resultMap>


	<!-- SQL : INSERT -->
	 <insert 	id="addRecipe"		parameterType="recipe" >
	 	INSERT
		INTO recipe VALUES	 (	seq_recipe_no.nextval ,#{writer.userNickname} , #{recipeName}, #{recipeDetail},#{detail},#{recipeImg},#{recipeVideo},#{recipeDifficulty},#{recipeTheme},#{cookingTime},#{recipeOrder},SYSDATE,0,0)
	 </insert>
	 
	  
	 <select id="getRecipe" parameterType="int"  resultMap="recipeSelectMap">
		SELECT r.*,i.*
		FROM recipe r,ingredient i
		WHERE r.recipe_no=i.recipe_no
		AND r.recipe_no= #{recipeNo}
	</select>
	
	<select id="getRecipeName" parameterType="int"  resultMap="recipeSelectMap">
		SELECT r.*,u.user_id
		FROM recipe r, users u
		WHERE r.writer_nickname = u.user_nickname
		AND r.recipe_no = #{recipeNo}
	</select>
	
	
	 
	 <!-- SQL : UPDATE -->
	<update id="updateRecipe" parameterType="recipe">
		update recipe
		<set>
		recipe_name 	= #{recipeName} ,
			recipe_detail	= #{recipeDetail},
			recipe_img				=	#{recipeImg},
			recipe_video				=	#{recipeVideo},
			recipe_difficulty = #{recipeDifficulty},
			cooking_time = #{cookingTime},
			recipe_order = #{recipeOrder} ,
			recipe_theme = #{recipeTheme}, 
			recipe_views = #{recipeViews}
		</set>
		WHERE recipe_no = #{recipeNo}
	</update>
	 

		
	 
	  <delete id="deleteRecipe" parameterType="int" >
	 DELETE
	 FROM recipe 
	 WHERE recipe_no= #{recipeNo} 
	 </delete>
	 
	 
	<!-- SQL : SELECT LIST -->
	<select  id="getRecipeList"  parameterType="search"	resultMap="recipeSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT r.*, u.user_nickname
											FROM recipe r, users u
											WHERE r.writer_nickname = u.user_nickname
											<if test="searchCondition != null">
													<if test="searchCondition == 0">
										 				AND r.recipe_NO LIKE '%'||''||'%'
													</if>
													<if test="searchCondition == 1">
										 				AND  r.recipe_Name LIKE '%'||#{searchKeyword}||'%'
													</if>
													<if test="searchCondition == 2">
										 				AND  r.writer_nickname LIKE '%'||#{searchKeyword}||'%'
													</if>
													<if test="searchCondition == 3 and searchKeyword !='' ">
										 				AND  r.recipe_NO LIKE '%'||#{searchKeyword}||'%'
													</if>
											</if>
											<if test="themeCondition != null">
													<if test='themeCondition == "한식"'>
										 				AND r.recipe_theme LIKE '한식'
													</if>
													<if test='themeCondition == "중식"'>
										 				AND r.recipe_theme LIKE '중식'
													</if>
													<if test='themeCondition == "양식"'>
										 				AND r.recipe_theme LIKE '양식'
													</if>
													<if test='themeCondition == "일식"'>
										 				AND r.recipe_theme LIKE '일식'
													</if>
													<if test='themeCondition == "간식"'>
										 				AND r.recipe_theme LIKE '간식'
													</if>
											</if>				
											<if test="orderCondition == null">
												ORDER BY r.recipe_no ASC 
											</if>									
											<if test="orderCondition != null">
											<choose>
													<when test='orderCondition == 0  '>
										 				ORDER BY r.recipe_no ASC 
													</when>
													<when test='orderCondition == 1  '>
										 				ORDER BY r.review_num DESC
													</when>
													<when test='orderCondition == 2  '>
										 				ORDER BY r.recipe_difficulty DESC
													</when>
													<when test='orderCondition == 3  '>
										 				ORDER BY r.cooking_time DESC
													</when>
													<when test='orderCondition == 4  '>
										 				ORDER BY r.recipe_views DESC
													</when>
													</choose>
													</if>


 ) inner_table	WHERE ROWNUM &lt;= #{endRowNum} ) 
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="map"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT r.*, u.user_nickname
											FROM recipe r, users u
											WHERE r.writer_nickname=u.user_nickname
											<if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				AND r.recipe_NO LIKE '%'|| ''||'%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				AND  r.recipe_Name LIKE '%'||#{searchKeyword}||'%'
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				AND  r.writer_nickname LIKE '%'||#{searchKeyword}||'%'
													</if>
													<if test="searchCondition == 3 and searchKeyword !='' ">
										 				AND  r.recipe_NO LIKE '%'||#{searchKeyword}||'%'
													</if>
											</if>
											<if test="themeCondition != null">
													<if test='themeCondition == "한식"'>
										 				AND r.recipe_theme LIKE '한식'
													</if>
													<if test='themeCondition == "중식"'>
										 				AND r.recipe_theme LIKE '중식'
													</if>
													<if test='themeCondition == "양식"'>
										 				AND r.recipe_theme LIKE '양식'
													</if>
													<if test='themeCondition == "일식"'>
										 				AND r.recipe_theme LIKE '일식'
													</if>
													<if test='themeCondition == "간식"'>
										 				AND r.recipe_theme LIKE '간식'
													</if>
											</if>
											<if test="orderCondition == null">
												ORDER BY r.recipe_no ASC 
											</if>									
											<if test="orderCondition != null">
											<choose>
													<when test='orderCondition == 0  '>
										 				ORDER BY r.recipe_no ASC 
													</when>
													<when test='orderCondition == 1  '>
										 				ORDER BY r.review_num DESC
													</when>
													<when test='orderCondition == 2  '>
										 				ORDER BY r.recipe_difficulty DESC
													</when>
													<when test='orderCondition == 3  '>
										 				ORDER BY r.cooking_time DESC
													</when>
													<when test='orderCondition == 4  '>
										 				ORDER BY r.recipe_views DESC
													</when>
													<otherwise>
														ORDER BY r.recipe_regdate DESC
													</otherwise>
													</choose>
													</if>
													) countTable						
	 </select>
	 
	 
	 <!-- SQL : 마이페이지(내가 쓴 레시피) LIST -->
	 <select  id="getMyRecipeList"  parameterType="search"	resultMap="recipeSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT *
											FROM recipe
											WHERE writer_nickname=#{writerNickname}
											<if test="searchCondition != null">
											<choose>
													<when test="searchCondition == 0 and searchKeyword !='' ">
										 				AND recipe_NO LIKE '%'||#{searchKeyword}||'%'
													</when>
													<when test="searchCondition == 1 and searchKeyword !='' ">
										 				 AND recipe_Name LIKE '%'||#{searchKeyword}||'%'
													</when>
													<otherwise>
													  and recipe_NO LIKE '%'|| ''||'%'
													</otherwise>
													</choose>
											</if>
											
													
											<if test="orderCondition != null">
											
											<choose>
													<when test="orderCondition == 0  ">
										 				ORDER BY review_num ASC
													</when>
													<when test="orderCondition == 1 ">
										 				ORDER BY recipe_difficulty DESC
													</when>
													<when test="orderCondition == 2  ">
										 				ORDER BY cooking_time DESC
													</when>
													<otherwise>
														ORDER BY recipe_no
													</otherwise>
													</choose>
													</if>


 )  inner_table
											
						WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
	 </select>
	 
	 <!-- SQL : 마이페이지(내가 쓴 레시피) ROW Count -->
	 <select  id="getTotalMyCount"  parameterType="map"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT recipe_no 
						FROM recipe
						WHERE writer_nickname = #{writerNickname}
						<if test="searchCondition != null">
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			AND recipe_no LIKE '%'||#{searchKeyword}||'%'
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 		AND recipe_name LIKE '%'||#{searchKeyword}||'%'
								</if>
								
							
						</if>  
						
						<if test="orderCondition != null">
											<choose>
													<when test="orderCondition == 0  ">
										 				ORDER BY review_num ASC
													</when>
													<when test="orderCondition == 1 ">
										 				ORDER BY recipe_difficulty DESC
													</when>
													<when test="orderCondition == 2  ">
										 				ORDER BY cooking_time DESC
													</when>
													<otherwise>
														ORDER BY recipe_no
													</otherwise>
													</choose>
													</if>
													) countTable						
	 </select>
	 
	 
	 <select  id="getPointList"  parameterType="map"	resultType="map">
	  	SELECT p.*,u.*
			FROM purchase p, users u 
			WHERE u.user_id = #{userId}
 
	 </select>
	 
	 <select  id="pointTotalCount"  parameterType="map"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT p.*,u.*
		FROM purchase p, users u
						WHERE u.user_id=#{userId}
													) countTable						
	 </select>
	 
</mapper>