<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="RankingMapper">
 		
	<resultMap   id="recipeSelectMap"  type="recipe">
		<result property="recipeNo" 			column="recipe_no" 			jdbcType="NUMERIC"/>
		<result property="recipeName"			column="recipe_name" 		jdbcType="VARCHAR" />
		<result property="recipeDetail" 	column="recipe_detail" 		jdbcType="VARCHAR" />
		<result property="detail" 			column="detail" 		jdbcType="VARCHAR" />
		<result property="recipeImg" 			column="recipe_img" 		jdbcType="VARCHAR" />
		<result property="recipeVideo" 			column="recipe_video" 		jdbcType="VARCHAR" />
		<result property="recipeDifficulty" 				column="recipe_difficulty" 					jdbcType="VARCHAR" />
		<result property="recipeTheme"      column="recipe_theme"           jdbcType="VARCHAR"/>
		<result property="cookingTime"      column="cooking_time"           jdbcType="NUMERIC"/>
		<result property="recipeOrder"      column="recipe_order"            jdbcType="CLOB" javaType="java.lang.String" />
		<result property="recipeRegDate" 				column="recipe_regdate" 					jdbcType="DATE" />
		<result property="reviewNum"      column="review_num"           jdbcType="NUMERIC"/>
		<result property="ingredientNo"      column="ingredient_no"           jdbcType="NUMERIC"/>
		<result property="ingredientName"      column="ingredient_name"           jdbcType="VARCHAR"/>
		<result property="ingredientAmount"      column="ingredient_amount"           jdbcType="VARCHAR"/>
		<result property="recipeViews"      column="recipe_views"           jdbcType="NUMERIC"/>
		<collection property="writer" resultMap="userSelectMap"/>
	</resultMap>
	
	<resultMap id="productSelectMap" type="product">
		<result property="prodNo" 				column="prod_no" 				jdbcType="NUMERIC"/>
		<result property="prodName"				column="prod_name" 				jdbcType="VARCHAR"/>
		<result property="prodThumbnail" 		column="prod_thumbnail" 		jdbcType="VARCHAR"/>
		<result property="prodContent" 			column="prod_content" 			jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="prodDetail" 			column="prod_detail" 			jdbcType="VARCHAR"/>
		<result property="prodStock" 			column="prod_stock" 			jdbcType="NUMERIC"/>
		<result property="prodTheme" 			column="prod_theme" 			jdbcType="VARCHAR"/>
		<result property="prodPrice" 			column="prod_price" 			jdbcType="NUMERIC"/>
		<result property="prodDisRate" 			column="prod_disrate" 			jdbcType="NUMERIC"/>
		<result property="prodDisPrice" 		column="prod_disprice" 			jdbcType="NUMERIC"/>
		<result property="prodStatus" 			column="prod_status" 			jdbcType="VARCHAR"/>
		<result property="couponApply" 			column="coupon_apply" 			jdbcType="VARCHAR"/>
		<result property="prodRegDate" 			column="prod_regdate" 			jdbcType="DATE"/>
	</resultMap>
	
	<resultMap id="purchaseSelectMap" type="purchase">
		<result property="tranNo" 					column="tran_no" 				jdbcType="NUMERIC"/>
		<result property="serialNo" 				column="serial_no" 				jdbcType="VARCHAR"/>		
		<collection property="purchaseProd" resultMap="productSelectMap"/>
	</resultMap>
	
	<resultMap id="loveSelectMap" type="love">
		<result property="loveNo" 			column="love_no" 			jdbcType="NUMERIC"/>
		<result property="userNickname" 	column="user_nickname" 		jdbcType="VARCHAR" />
		<result property="userId" 	column="user_id" 		jdbcType="VARCHAR" />
		<result property="loveCheck" 			column="love_check" 		jdbcType="NUMERIC" />
		<result property="loveIncrease" 			column="love_increase" 		jdbcType="NUMERIC" />
		<collection property="user" resultMap="userSelectMap"/>
	</resultMap>
	
	<resultMap id="userSelectMap" type="user">
		<result property="userId" 	column="user_id" 		jdbcType="VARCHAR"/>
		<result property="userName"	column="user_name" 		jdbcType="VARCHAR" />
		<result property="userNickname" 	column="user_nickname" 		jdbcType="VARCHAR" />
		<result property="userImage" 	column="user_image" 		jdbcType="VARCHAR" />
		<result property="role" 	column="role" 			jdbcType="VARCHAR" />
		<result property="regDate" 	column="user_regdate" 		jdbcType="DATE" />
	</resultMap>
	
	
	
	<!-- SQL : INSERT -->
	<insert 	id="addRecipeView"		parameterType="int" >
	 	INSERT
		INTO ranking ( ranking_no, recipe_no, view_date) 
		VALUES (seq_ranking_ranking_no.NEXTVAL, 
				#{recipeNo}, 
				SYSDATE)
	 </insert>
	 
	 <insert 	id="addPurchase"		parameterType="map" >
	 	INSERT
		INTO ranking ( ranking_no, prod_no, serial_no, purchase_date) 
		VALUES (seq_ranking_ranking_no.NEXTVAL, 
				#{prodNo}, #{serialNo},
				SYSDATE)
	 </insert>
	 
	 <insert 	id="addLoveMentor"		parameterType="map" >
	 	INSERT
		INTO ranking ( ranking_no, user_nickname, user_id, love_date) 
		VALUES (seq_ranking_ranking_no.NEXTVAL, 
				#{userNickname}, #{userId}, SYSDATE)
	 </insert>
	 
	  <!-- 구매 취소 -->	
	 <select  id="deletePurchase"  parameterType="map">
	  	DELETE FROM ranking 
	  	<where>
			prod_no = #{prodNo} AND serial_no = #{serialNo}
		</where>		
	 </select>
	 
	 <!-- 즐겨찾기 삭제 -->	
	 <select  id="deleteLoveMentor"  parameterType="map">
	  	DELETE FROM ranking 
	  	<where>
			user_nickname = #{userNickname} AND user_id = #{userId}
		</where>		
	 </select>
	 
	 <!-- SQL : SELECT LIST -->
	<select  id="getRecipeList"  parameterType="search"	resultMap="recipeSelectMap">
	  	SELECT * FROM (SELECT r.*, ranking_table.count, u.user_nickname 
										FROM recipe r, (SELECT recipe_no, count(*) count FROM ranking 
																			
											<if test="orderCondition != null">
												<choose>
													<when test="orderCondition == 0 ">
										 			 WHERE view_date &gt;= CURRENT_DATE-1 
													</when>
													<when test="orderCondition == 1 ">
										 			 WHERE view_date &gt;= CURRENT_DATE-8 
													</when>
													<when test="orderCondition == 2 ">
										 			 WHERE view_date &gt;= CURRENT_DATE-31 
													</when>				
												</choose>
											</if>
											GROUP BY recipe_no) ranking_table, users u 
											WHERE r.recipe_no = ranking_table.recipe_no AND r.writer_nickname = u.user_nickname  
											ORDER BY ranking_table.count DESC) WHERE ROWNUM &lt;= 20
	 </select>
	 
	 
	 <!-- SQL : SELECT LIST -->
	<select  id="getLoveList"  parameterType="search" statementType="CALLABLE"	resultMap="loveSelectMap">
	  	SELECT * FROM (SELECT l.user_nickname, ranking_table.love_increase, u.user_id, u.user_image 
					FROM love l, (SELECT user_nickname, count(*) love_increase FROM ranking 
																			
											<if test="orderCondition != null">
												<choose>
													<when test="orderCondition == 0 ">
										 			 WHERE love_date &gt;= CURRENT_DATE-1 
													</when>
													<when test="orderCondition == 1 ">
										 			 WHERE love_date &gt;= CURRENT_DATE-8 
													</when>
													<when test="orderCondition == 2 ">
										 			 WHERE love_date &gt;= CURRENT_DATE-31 
													</when>				
												</choose>
											</if>
											GROUP BY user_nickname) ranking_table, users u 
											WHERE l.user_nickname = ranking_table.user_nickname AND l.user_nickname = u.user_nickname
											GROUP BY l.user_nickname, ranking_table.love_increase, u.user_id, u.user_image 
											ORDER BY ranking_table.love_increase DESC ) WHERE ROWNUM &lt;= 20
	 </select>
	 
	 
	  <!-- SQL : SELECT LIST -->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  	SELECT * FROM (SELECT p.*, ranking_table.count 
										FROM product p, (SELECT prod_no, count(*) count FROM ranking 
																			
											<if test="orderCondition != null">
												<choose>
													<when test="orderCondition == 0 ">
										 			 WHERE purchase_date &gt;= CURRENT_DATE-1 
													</when>
													<when test="orderCondition == 1 ">
										 			 WHERE purchase_date &gt;= CURRENT_DATE-8 
													</when>
													<when test="orderCondition == 2 ">
										 			 WHERE purchase_date &gt;= CURRENT_DATE-31 
													</when>				
												</choose>
											</if>
											GROUP BY prod_no) ranking_table  
											WHERE p.prod_no = ranking_table.prod_no  
											ORDER BY ranking_table.count DESC) WHERE ROWNUM &lt;= 20
	 </select>
	 
</mapper>